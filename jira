#!/bin/bash

jira_browse() {

  xdg-open "$1" 2>/dev/null  # open using system default broswer
#  google-chrome "$1" 2>/dev/null
}

##
# urlencode <string>
# https://gist.github.com/cdown/1163649
jira_url_encode() {
    old_lc_collate=$LC_COLLATE
    LC_COLLATE=C

    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf "$c" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done

    LC_COLLATE=$old_lc_collate
}
##
# urldecode <string>
# https://gist.github.com/cdown/1163649
jira_url_decode() {
    local url_encoded="${1//+/ }"
    printf '%b' "${url_encoded//%/\\x}"
}

jira_proj_jql() {
  echo $(jira_project_in $1)' AND resolution = Unresolved ORDER BY updated DESC'
}

jira_sprint_jql() {
  echo $(jira_project_in $1)' AND fixVersion = earliestUnreleasedVersion() AND IssueType not in (Sprint) ORDER BY project, component, priority'
}

jira_backlog_jql() {
  echo $(jira_project_in $1)' AND fixVersion is EMPTY AND statusCategory != Done ORDER BY project, component'
}

jira_unestimated_jql() {
  echo $(jira_project_in $1)' AND issueType not in (Epic, Story, Bug, Sprint) AND originalEstimate is EMPTY AND statusCategory != Done ORDER BY project, component'
}

jira_stories_jql() {
  echo $(jira_project_in $1)' AND issuetype in (Story, Epic) AND resolution = Unresolved ORDER BY Status ASC, fixVersion ASC, Priority DESC'
}

jira_postponed_jql() {
  echo $(jira_project_in $1)' AND resolution=Postponed ORDER BY updated ASC'
}

jira_project_in() {
  name=$(echo $1 | tr '[a-z]' '[A-Z]')
  name=$( [[ ${#name} -eq 0 ]] && echo 'projectsLeadByUser()' || echo '('$name')' )
  echo 'project in '$name
}

# add a little bit of flourish to jql queries
# by loading a filter so that it's name is displayed
FILTER_OVERRIDE_FMT='/issues/?filter=%s&jql=%s'

jira_detect_issue_key() {
  last_place=$((${#1}-1))
  last_char="${1:$last_place:1}"
  re='^[0-9]+$'
  if [[ $last_char =~ $re ]] ; then
    echo true
  fi
}

jira_filter() {
  case "$1" in
  exp|expediting)
    echo '16603'
    ;;
  queue)
    echo '13401'
    ;;
  mysprint)
    echo '13405'
    ;;
  unestimated)
    echo '15100'
    ;;
  unscheduled)
    echo '12305'
    ;;
  postponed)
    echo '13900'
    ;;
  this-sprint)
    echo '13404'
    ;;
  time-logging)
    echo '14700'
    ;;
  today)
    echo '16604'
    ;;
  reqs)
    echo '15101'
    ;;
  soon)
    echo '16605'
    ;;
   *)
    echo 0
  esac
}

jira_cmds() {
  if [ "$(jira_filter $1)" -ne "0" ] ; then
    jira_cmds filter $1
    exit
  fi

  case "$1" in
  tc|time-cal)
    cmd='/plugins/servlet/ac/is.origo.jira.tempo-plugin/tempo-my-work#!/?type=TIME'
    ;;
  ts|time-sheet)
    cmd='/plugins/servlet/ac/is.origo.jira.tempo-plugin/tempo-my-work#!/timesheet/?dateDisplayType=days&groupBy=issue&viewType=TIMESHEET'
    ;;
  tr|time-report)
    cmd='/plugins/servlet/ac/is.origo.jira.tempo-plugin/tempo-reports#!/?dateDisplayType=days&groupBy=issue&groupBy=project&groupBy=worker&viewType=LIST'
    ;;
  p|postponed|deep-backlog)
    jql=$(jira_url_encode "$(jira_postponed_jql $2)")
    printf -v cmd $FILTER_OVERRIDE_FMT "$(jira_filter postponed)" "$jql"
    ;;
  filter)
    cmd='/issues/?filter='$(jira_filter $2)
    ;;
  d|dash|dashboard)
    cmd='/secure/Dashboard.jspa'
    ;;
  q|query)
    shift # drop the first param (q)
    query="$@"
    cmd='/issues/?jql='$(jira_url_encode "$query")
    ;;
  i|current|issues)
    cmd='/issues/'
    ;;
  browse|issue)
    cmd='/browse'
    ;;
  proj)
    #/browse supports case-insensitive; /projects is case-sensitive
    cmd='/browse/'$2'?selectedItem=com.atlassian.jira.jira-projects-plugin%3Arelease-page&status=released-unreleased'
    ;;
  est|estimate)
    jql=$(jira_url_encode "$(jira_unestimated_jql $2)")
    printf -v cmd $FILTER_OVERRIDE_FMT "$(jira_filter unestimated)" "$jql"
    ;;
  s|sprint)
    jql=$(jira_url_encode "$(jira_sprint_jql $2)")
    printf -v cmd "$FILTER_OVERRIDE_FMT" "$(jira_filter this-sprint)" "$jql"
    ;;
  b|bkl|backlog)
    jql=$(jira_url_encode "$(jira_backlog_jql $2)")
    printf -v cmd "$FILTER_OVERRIDE_FMT" "$(jira_filter unscheduled)" "$jql"
    ;;
  st|stories)
    jql=$(jira_url_encode "$(jira_stories_jql $2)")
    printf -v cmd "$FILTER_OVERRIDE_FMT" "$(jira_filter reqs)" "$jql"
    ;;
  m|my)
    cmd='/secure/RapidBoard.jspa?rapidView=55&quickFilter=158'
    ;;
  sprints)
    cmd='/secure/RapidBoard.jspa?rapidView=64'
    ;;
  planning)
    cmd='/secure/RapidBoard.jspa?rapidView=66'
    ;;
  *)
    if [[ $(jira_detect_issue_key $1) ]] ; then
      cmd=$(jira_cmds browse)/$1
    else # try to open the project
      cmd=$(jira_cmds proj $1)
    fi
    ;;
  esac
  echo $cmd
}

jira() {
  jira_host=https://ginkgostreet.atlassian.net
  jira_url=$jira_host$(jira_cmds "$@")

  jira_browse $jira_url;
}

if [ $# == 0 ]; then
  jira query; exit;
fi

# JUST DO IT! (tm)
jira $@
